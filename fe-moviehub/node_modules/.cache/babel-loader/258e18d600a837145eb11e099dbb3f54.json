{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateDirection = calculateDirection;\n\nvar _types = require(\"../types\");\n\nfunction calculateDirection(trace) {\n  var direction;\n  var negative = _types.TraceDirectionKey.NEGATIVE;\n  var positive = _types.TraceDirectionKey.POSITIVE;\n  var current = trace[trace.length - 1];\n  var previous = trace[trace.length - 2] || 0;\n\n  if (trace.every(function (i) {\n    return i === 0;\n  })) {\n    return _types.TraceDirectionKey.NONE;\n  }\n\n  direction = current > previous ? positive : negative;\n\n  if (current === 0) {\n    direction = previous < 0 ? positive : negative;\n  }\n\n  return direction;\n}","map":{"version":3,"sources":["C:/Users/PC/Desktop/ETF/PNWT/NWT-projekat/fe-moviehub/node_modules/vanilla-swipe/lib/utils/calculateDirection.js"],"names":["Object","defineProperty","exports","value","calculateDirection","_types","require","trace","direction","negative","TraceDirectionKey","NEGATIVE","positive","POSITIVE","current","length","previous","every","i","NONE"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AAEA,SAASF,kBAAT,CAA4BG,KAA5B,EAAmC;AACjC,MAAIC,SAAJ;AACA,MAAIC,QAAQ,GAAGJ,MAAM,CAACK,iBAAP,CAAyBC,QAAxC;AACA,MAAIC,QAAQ,GAAGP,MAAM,CAACK,iBAAP,CAAyBG,QAAxC;AACA,MAAIC,OAAO,GAAGP,KAAK,CAACA,KAAK,CAACQ,MAAN,GAAe,CAAhB,CAAnB;AACA,MAAIC,QAAQ,GAAGT,KAAK,CAACA,KAAK,CAACQ,MAAN,GAAe,CAAhB,CAAL,IAA2B,CAA1C;;AAEA,MAAIR,KAAK,CAACU,KAAN,CAAY,UAAUC,CAAV,EAAa;AAC3B,WAAOA,CAAC,KAAK,CAAb;AACD,GAFG,CAAJ,EAEI;AACF,WAAOb,MAAM,CAACK,iBAAP,CAAyBS,IAAhC;AACD;;AAEDX,EAAAA,SAAS,GAAGM,OAAO,GAAGE,QAAV,GAAqBJ,QAArB,GAAgCH,QAA5C;;AAEA,MAAIK,OAAO,KAAK,CAAhB,EAAmB;AACjBN,IAAAA,SAAS,GAAGQ,QAAQ,GAAG,CAAX,GAAeJ,QAAf,GAA0BH,QAAtC;AACD;;AAED,SAAOD,SAAP;AACD","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.calculateDirection = calculateDirection;\r\n\r\nvar _types = require(\"../types\");\r\n\r\nfunction calculateDirection(trace) {\r\n  var direction;\r\n  var negative = _types.TraceDirectionKey.NEGATIVE;\r\n  var positive = _types.TraceDirectionKey.POSITIVE;\r\n  var current = trace[trace.length - 1];\r\n  var previous = trace[trace.length - 2] || 0;\r\n\r\n  if (trace.every(function (i) {\r\n    return i === 0;\r\n  })) {\r\n    return _types.TraceDirectionKey.NONE;\r\n  }\r\n\r\n  direction = current > previous ? positive : negative;\r\n\r\n  if (current === 0) {\r\n    direction = previous < 0 ? positive : negative;\r\n  }\r\n\r\n  return direction;\r\n}"]},"metadata":{},"sourceType":"script"}