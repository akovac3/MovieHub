{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adnak\\\\Downloads\\\\NWT-projekat\\\\fe-moviehub\\\\src\\\\Components\\\\CreateActor\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport { getActors } from '../../Api/Movie/movie';\nimport { postActor } from '../../Api/Movie/movie';\nimport { useEffect, useRef } from 'react';\nimport TableHead from '@mui/material/TableHead';\nimport { styled } from '@mui/material/styles';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TextField from '@mui/material/TextField';\nimport { Button } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { Container, makeStyles } from '@material-ui/core';\nimport { message } from 'antd';\nimport Grid from '@material-ui/core/Grid';\nimport { orange } from '@material-ui/core/colors';\nimport './CreateActor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ColorButton = styled(Button)(({\n  theme\n}) => ({\n  color: theme.palette.getContrastText(orange[500]),\n  backgroundColor: orange[500],\n  '&:hover': {\n    backgroundColor: orange[800]\n  }\n}));\n\nfunction TablePaginationActions(props) {\n  _s();\n\n  const theme = useTheme();\n  const {\n    count,\n    page,\n    rowsPerPage,\n    onPageChange\n  } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexShrink: 0,\n      ml: 2.5\n    },\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleFirstPageButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"first page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(LastPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 57\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleBackButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"previous page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 63\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleNextButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": \"next page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 62\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleLastPageButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": \"last page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(LastPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 58\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TablePaginationActions, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = TablePaginationActions;\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\nconst columns = [{\n  id: 'name',\n  label: 'First name'\n}, {\n  id: 'lastName',\n  label: 'Last name'\n}, {\n  id: 'image',\n  label: 'Image'\n}];\nconst StyledTableCell = styled(TableCell)(({\n  theme\n}) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n    color: theme.palette.common.black,\n    fontWeight: 'bold'\n  }\n}));\nconst StyledTableRow = styled(TableRow)(({\n  theme\n}) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover\n  },\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    border: 0\n  }\n}));\nconst useStyles = makeStyles({\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: 'block',\n    width: 50\n  }\n});\nexport default function CustomPaginationActionsTable() {\n  _s2();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [actors, setActors] = React.useState([]);\n  const [fName, setFName] = React.useState('');\n  const [lName, setLName] = React.useState('');\n  const [img, setImg] = React.useState('');\n  const [firstError, setFirstError] = React.useState(false);\n  const [lastError, setLastError] = React.useState(false);\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n\n  const onFinish = async values => {\n    try {\n      setLoading(true);\n      const response = await postActor(values);\n      message.success('Successfully saved actor');\n      setLoading(false);\n      window.location.reload(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n      message.warning(error.response.data.message);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setFirstError(false);\n    setLastError(false);\n\n    if (fName == '') {\n      setFirstError(true);\n    }\n\n    if (lName == '') {\n      setLastError(true);\n    }\n\n    if (fName && lName) {\n      const values = {\n        firstName: fName,\n        lastName: lName,\n        image: img\n      };\n      onFinish(values);\n    }\n  };\n\n  const getData = async values => {\n    try {\n      return await getActors();\n    } catch (error) {\n      console.log(error);\n      console.warning(error.response.data.message);\n    }\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      console.log(\"desi se\");\n\n      try {\n        const response = await getData();\n        console.log(response);\n        setActors(response);\n        actors.sort((a, b) => a.firstName < b.firstName ? -1 : 1);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n\n    fetchData();\n  }, []); // Avoid a layout jump when reaching the last page with empty rows.\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - actors.length) : 0;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        sx: {\n          minWidth: 500\n        },\n        \"aria-label\": \"custom pagination table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [(rowsPerPage > 0 ? actors.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : actors).map(row => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: row.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              style: {\n                'color': 'black'\n              },\n              children: row.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)), emptyRows > 0 && /*#__PURE__*/_jsxDEV(StyledTableRow, {\n            style: {\n              height: 53 * emptyRows\n            },\n            children: /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              colSpan: 6\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TablePagination, {\n              rowsPerPageOptions: [5, 10, 25, {\n                label: 'All',\n                value: -1\n              }],\n              colSpan: 3,\n              count: actors.length,\n              rowsPerPage: rowsPerPage,\n              page: page,\n              SelectProps: {\n                inputProps: {\n                  'aria-label': 'rows per page'\n                },\n                native: true\n              },\n              onPageChange: handleChangePage,\n              onRowsPerPageChange: handleChangeRowsPerPage,\n              ActionsComponent: TablePaginationActions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        color: \"secondary\",\n        component: \"h2\",\n        gutterBottom: true,\n        children: \" Create new actor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        autoComplete: \"off\",\n        onSubmit: handleSubmit,\n        className: \"register-form\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            onChange: e => setFName(e.target.value),\n            label: \"First name\",\n            required: true,\n            fullWidth: true,\n            error: firstError,\n            variant: \"outlined\",\n            className: classes.field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 9\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            onChange: e => setLName(e.target.value),\n            label: \"Last name\",\n            required: true,\n            fullWidth: true,\n            error: lastError,\n            variant: \"outlined\",\n            className: classes.field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 9\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            onChange: e => setImg(e.target.value),\n            label: \"Image\",\n            required: true,\n            fullWidth: true,\n            variant: \"outlined\",\n            className: classes.field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 9\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(ColorButton, {\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(CustomPaginationActionsTable, \"hPl8bj6+rOFCQBdriGna8iwLERM=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = CustomPaginationActionsTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TablePaginationActions\");\n$RefreshReg$(_c2, \"CustomPaginationActionsTable\");","map":{"version":3,"sources":["C:/Users/adnak/Downloads/NWT-projekat/fe-moviehub/src/Components/CreateActor/index.js"],"names":["React","PropTypes","useTheme","Box","Table","TableBody","TableContainer","TableFooter","TablePagination","TableRow","Paper","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","getActors","postActor","useEffect","useRef","TableHead","styled","TableCell","tableCellClasses","TextField","Button","Typography","Container","makeStyles","message","Grid","orange","ColorButton","theme","color","palette","getContrastText","backgroundColor","TablePaginationActions","props","count","page","rowsPerPage","onPageChange","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","flexShrink","ml","direction","propTypes","number","isRequired","func","columns","id","label","StyledTableCell","head","common","black","white","fontSize","fontWeight","body","StyledTableRow","action","hover","border","useStyles","field","marginTop","marginBottom","display","width","CustomPaginationActionsTable","setPage","useState","setRowsPerPage","actors","setActors","fName","setFName","lName","setLName","img","setImg","firstError","setFirstError","lastError","setLastError","classes","loading","setLoading","onFinish","values","response","success","window","location","reload","error","console","log","warning","data","handleSubmit","e","preventDefault","firstName","lastName","image","getData","fetchData","sort","a","b","emptyRows","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","minWidth","map","column","align","slice","row","height","inputProps","native"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableFooter from '@mui/material/TableFooter';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport LastPageIcon from '@mui/icons-material/LastPage';\r\nimport { getActors } from '../../Api/Movie/movie'\r\nimport { postActor } from '../../Api/Movie/movie'\r\nimport {useEffect, useRef} from 'react'\r\nimport TableHead from '@mui/material/TableHead';\r\nimport { styled } from '@mui/material/styles';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Button} from '@material-ui/core';\r\nimport { Typography } from '@material-ui/core';\r\nimport { Container, makeStyles } from '@material-ui/core';\r\nimport { message } from 'antd'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { orange } from '@material-ui/core/colors';\r\n\r\nimport './CreateActor.css'\r\n\r\nconst ColorButton = styled(Button)(({ theme }) => ({\r\n    color: theme.palette.getContrastText(orange[500]),\r\n    backgroundColor: orange[500],\r\n    '&:hover': {\r\n      backgroundColor: orange[800]\r\n    },\r\n  }));\r\n\r\n\r\n\r\n\r\nfunction TablePaginationActions(props) {\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onPageChange(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onPageChange(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onPageChange(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\nconst columns = [\r\n    { id: 'name', label: 'First name' },\r\n    { id: 'lastName', label: 'Last name'},\r\n    {\r\n      id: 'image',\r\n      label: 'Image'\r\n    },\r\n  ];\r\n\r\n  const StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n      fontSize:20,\r\n      fontWeight: 'bold',\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n      fontSize: 14,\r\n      color: theme.palette.common.black,\r\n      fontWeight: 'bold'\r\n    },\r\n  }));\r\n  \r\n  const StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n    // hide last border\r\n    '&:last-child td, &:last-child th': {\r\n      border: 0,\r\n    },\r\n  }));\r\n\r\n  const useStyles = makeStyles({\r\n    field: {\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n        display: 'block',\r\n        width:50\r\n    }\r\n\r\n  })\r\n  \r\n\r\nexport default function CustomPaginationActionsTable() {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [actors, setActors] = React.useState([]);\r\n  const [fName, setFName] = React.useState('');\r\n  const [lName, setLName] = React.useState('');\r\n  const [img, setImg] = React.useState('');\r\n  const [firstError, setFirstError] = React.useState(false);\r\n  const [lastError, setLastError] = React.useState(false);\r\n  const classes = useStyles()\r\n  const [loading, setLoading] = React.useState(false)\r\n\r\n\r\n  const onFinish = async (values) => {\r\n    try {\r\n      setLoading(true)\r\n\r\n      const response = await postActor(values)\r\n      message.success('Successfully saved actor')\r\n      setLoading(false)\r\n      window.location.reload(false);\r\n    } catch (error) {\r\n      console.log(error)\r\n\r\n      setLoading(false)\r\n      message.warning(error.response.data.message)\r\n    }\r\n  }\r\n\r\n const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    setFirstError(false)\r\n    setLastError(false)\r\n\r\n    if(fName == '') {\r\n        setFirstError(true)\r\n    }\r\n\r\n    \r\n    if(lName == '') {\r\n        setLastError(true)\r\n    }\r\n\r\nif(fName && lName){const values = {\r\n            firstName: fName,\r\n            lastName: lName,\r\n            image: img,\r\n          }\r\n          onFinish(values)\r\n        }\r\n\r\n }\r\n\r\n\r\n  const getData = async (values) => {\r\n    try {\r\n      return await getActors()\r\n    } catch (error) {\r\n      console.log(error)\r\n      console.warning(error.response.data.message)\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n        console.log(\"desi se\")\r\n        try {\r\n          const response = await getData()\r\n          console.log(response)\r\n          setActors(response)\r\n          actors.sort((a, b) => (a.firstName < b.firstName ? -1 : 1));\r\n        } catch (e) {\r\n          console.error(e)\r\n        }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - actors.length) : 0;\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n \r\n  return (\r\n    <>\r\n    <TableContainer component={Paper}>\r\n      <Table stickyHeader sx={{ minWidth: 500 }} aria-label=\"custom pagination table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <StyledTableCell \r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </StyledTableCell >\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? actors.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : actors\r\n          ).map((row) => (\r\n            <StyledTableRow key={row.id}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.firstName}\r\n              </StyledTableCell>\r\n              <StyledTableCell >\r\n                {row.lastName}\r\n              </StyledTableCell>\r\n              <StyledTableCell style={{ 'color':'black' }}>\r\n                {row.image}\r\n              </StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n\r\n          {emptyRows > 0 && (\r\n            <StyledTableRow style={{ height: 53 * emptyRows }}>\r\n              <StyledTableCell colSpan={6} />\r\n            </StyledTableRow>\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n              colSpan={3}\r\n              count={actors.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: {\r\n                  'aria-label': 'rows per page',\r\n                },\r\n                native: true,\r\n              }}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n    <Container className='form-container'>\r\n\r\n        <Typography\r\n            variant = \"h3\"\r\n            color='secondary'\r\n            component='h2'\r\n            gutterBottom\r\n            > Create new actor</Typography>\r\n\r\n    <form noValidate autoComplete='off' onSubmit={handleSubmit} className='register-form'\r\n>\r\n    <Grid item xs={12} sm={6}>\r\n        <TextField\r\n          onChange={(e) => setFName(e.target.value)}\r\n          label=\"First name\"\r\n          required\r\n          fullWidth\r\n          error={firstError}\r\n          variant='outlined'\r\n          className={classes.field}\r\n        /> </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n        <TextField\r\n               onChange={(e) => setLName(e.target.value)}\r\n               label=\"Last name\"\r\n               required\r\n               fullWidth\r\n               error={lastError}\r\n               variant='outlined'\r\n               className={classes.field}\r\n        /> </Grid>\r\n\r\n<Grid item xs={12} sm={6}>\r\n\r\n        <TextField\r\n                    onChange={(e) => setImg(e.target.value)}\r\n                    label=\"Image\"\r\n                    required\r\n                    fullWidth\r\n                    variant='outlined'\r\n                    className={classes.field}\r\n        /> </Grid>\r\n        <ColorButton type='submit' variant='contained'>Submit</ColorButton>\r\n\r\n        </form>\r\n    </Container>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}