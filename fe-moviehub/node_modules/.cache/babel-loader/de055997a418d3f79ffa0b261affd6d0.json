{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adnak\\\\Downloads\\\\NWT-projekat\\\\fe-moviehub\\\\src\\\\Components\\\\CreateActor\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport { getActors } from '../../Api/Movie/movie';\nimport { useEffect } from 'react';\nimport TableHead from '@mui/material/TableHead';\nimport { styled } from '@mui/material/styles';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TextField from '@mui/material/TextField';\nimport { Button } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TablePaginationActions(props) {\n  _s();\n\n  const theme = useTheme();\n  const {\n    count,\n    page,\n    rowsPerPage,\n    onPageChange\n  } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexShrink: 0,\n      ml: 2.5\n    },\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleFirstPageButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"first page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(LastPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 57\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleBackButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"previous page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 63\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleNextButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": \"next page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 62\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleLastPageButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": \"last page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(LastPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 58\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TablePaginationActions, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = TablePaginationActions;\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\n\nfunction createData(firstName, lastName, image) {\n  return {\n    firstName,\n    lastName,\n    image\n  };\n}\n\nconst rows = [createData('Cupcake', 305, 3.7), createData('Donut', 452, 25.0), createData('Eclair', 262, 16.0), createData('Frozen yoghurt', 159, 6.0), createData('Gingerbread', 356, 16.0), createData('Honeycomb', 408, 3.2), createData('Ice cream sandwich', 237, 9.0), createData('Jelly Bean', 375, 0.0), createData('KitKat', 518, 26.0), createData('Lollipop', 392, 0.2), createData('Marshmallow', 318, 0), createData('Nougat', 360, 19.0), createData('Oreo', 437, 18.0)].sort((a, b) => a.firstName < b.firstName ? -1 : 1);\nconst columns = [{\n  id: 'name',\n  label: 'First name'\n}, {\n  id: 'lastName',\n  label: 'Last name'\n}, {\n  id: 'image',\n  label: 'Image'\n}];\nconst StyledTableCell = styled(TableCell)(({\n  theme\n}) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n    color: theme.palette.common.black,\n    fontWeight: 'bold'\n  }\n}));\nconst StyledTableRow = styled(TableRow)(({\n  theme\n}) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover\n  },\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    border: 0\n  }\n}));\nexport default function CustomPaginationActionsTable() {\n  _s2();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [actors, setActors] = React.useState([]);\n\n  const getData = async values => {\n    try {\n      return await getActors();\n    } catch (error) {\n      console.log(error);\n      console.warning(error.response.data.message);\n    }\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      console.log(\"desi se\");\n\n      try {\n        const response = await getData();\n        console.log(response);\n        setActors(response);\n        actors.sort((a, b) => a.firstName < b.firstName ? -1 : 1);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n\n    fetchData();\n  }, []); // Avoid a layout jump when reaching the last page with empty rows.\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        sx: {\n          minWidth: 500\n        },\n        \"aria-label\": \"custom pagination table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [(rowsPerPage > 0 ? actors.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : actors).map(row => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: row.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              style: {\n                'color': 'black'\n              },\n              children: row.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)), emptyRows > 0 && /*#__PURE__*/_jsxDEV(StyledTableRow, {\n            style: {\n              height: 53 * emptyRows\n            },\n            children: /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              colSpan: 6\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TablePagination, {\n              rowsPerPageOptions: [5, 10, 25, {\n                label: 'All',\n                value: -1\n              }],\n              colSpan: 3,\n              count: actors.length,\n              rowsPerPage: rowsPerPage,\n              page: page,\n              SelectProps: {\n                inputProps: {\n                  'aria-label': 'rows per page'\n                },\n                native: true\n              },\n              onPageChange: handleChangePage,\n              onRowsPerPageChange: handleChangeRowsPerPage,\n              ActionsComponent: TablePaginationActions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      sx: {\n        '& .MuiTextField-root': {\n          m: 1,\n          width: '25ch'\n        }\n      },\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          'margineTop': '100px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          id: \"filled-required\",\n          label: \"Required\",\n          defaultValue: \"First name\",\n          variant: \"filled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          id: \"filled-required\",\n          label: \"Required\",\n          defaultValue: \"Last name\",\n          variant: \"filled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          id: \"filled-required\",\n          label: \"Required\",\n          defaultValue: \"Image\",\n          variant: \"filled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(CustomPaginationActionsTable, \"lJbeg89h+2tOPYtqWO1eJsxQydM=\");\n\n_c2 = CustomPaginationActionsTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TablePaginationActions\");\n$RefreshReg$(_c2, \"CustomPaginationActionsTable\");","map":{"version":3,"sources":["C:/Users/adnak/Downloads/NWT-projekat/fe-moviehub/src/Components/CreateActor/index.js"],"names":["React","PropTypes","useTheme","Box","Table","TableBody","TableContainer","TableFooter","TablePagination","TableRow","Paper","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","getActors","useEffect","TableHead","styled","TableCell","tableCellClasses","TextField","Button","TablePaginationActions","props","theme","count","page","rowsPerPage","onPageChange","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","flexShrink","ml","direction","propTypes","number","isRequired","func","createData","firstName","lastName","image","rows","sort","a","b","columns","id","label","StyledTableCell","head","backgroundColor","palette","common","black","color","white","fontSize","fontWeight","body","StyledTableRow","action","hover","border","CustomPaginationActionsTable","setPage","useState","setRowsPerPage","actors","setActors","getData","values","error","console","log","warning","response","data","message","fetchData","e","emptyRows","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","minWidth","map","column","align","slice","row","height","inputProps","native","m","width"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableFooter from '@mui/material/TableFooter';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport LastPageIcon from '@mui/icons-material/LastPage';\r\nimport { getActors } from '../../Api/Movie/movie'\r\nimport {useEffect} from 'react'\r\nimport TableHead from '@mui/material/TableHead';\r\nimport { styled } from '@mui/material/styles';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Button } from 'antd';\r\n\r\n\r\n\r\nfunction TablePaginationActions(props) {\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onPageChange(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onPageChange(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onPageChange(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n\r\n  return (\r\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(firstName, lastName, image) {\r\n  return { firstName, lastName, image };\r\n}\r\n\r\n\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7),\r\n  createData('Donut', 452, 25.0),\r\n  createData('Eclair', 262, 16.0),\r\n  createData('Frozen yoghurt', 159, 6.0),\r\n  createData('Gingerbread', 356, 16.0),\r\n  createData('Honeycomb', 408, 3.2),\r\n  createData('Ice cream sandwich', 237, 9.0),\r\n  createData('Jelly Bean', 375, 0.0),\r\n  createData('KitKat', 518, 26.0),\r\n  createData('Lollipop', 392, 0.2),\r\n  createData('Marshmallow', 318, 0),\r\n  createData('Nougat', 360, 19.0),\r\n  createData('Oreo', 437, 18.0),\r\n].sort((a, b) => (a.firstName < b.firstName ? -1 : 1));\r\n\r\nconst columns = [\r\n    { id: 'name', label: 'First name' },\r\n    { id: 'lastName', label: 'Last name'},\r\n    {\r\n      id: 'image',\r\n      label: 'Image'\r\n    },\r\n  ];\r\n\r\n  const StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n      fontSize:20,\r\n      fontWeight: 'bold',\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n      fontSize: 14,\r\n      color: theme.palette.common.black,\r\n      fontWeight: 'bold'\r\n    },\r\n  }));\r\n  \r\n  const StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n    // hide last border\r\n    '&:last-child td, &:last-child th': {\r\n      border: 0,\r\n    },\r\n  }));\r\n  \r\n\r\nexport default function CustomPaginationActionsTable() {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [actors, setActors] = React.useState([]);\r\n\r\n  const getData = async (values) => {\r\n    try {\r\n      return await getActors()\r\n    } catch (error) {\r\n      console.log(error)\r\n      console.warning(error.response.data.message)\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n        console.log(\"desi se\")\r\n        try {\r\n          const response = await getData()\r\n          console.log(response)\r\n          setActors(response)\r\n          actors.sort((a, b) => (a.firstName < b.firstName ? -1 : 1));\r\n        } catch (e) {\r\n          console.error(e)\r\n        }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <TableContainer component={Paper}>\r\n      <Table stickyHeader sx={{ minWidth: 500 }} aria-label=\"custom pagination table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <StyledTableCell \r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </StyledTableCell >\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? actors.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : actors\r\n          ).map((row) => (\r\n            <StyledTableRow key={row.id}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.firstName}\r\n              </StyledTableCell>\r\n              <StyledTableCell >\r\n                {row.lastName}\r\n              </StyledTableCell>\r\n              <StyledTableCell style={{ 'color':'black' }}>\r\n                {row.image}\r\n              </StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n\r\n          {emptyRows > 0 && (\r\n            <StyledTableRow style={{ height: 53 * emptyRows }}>\r\n              <StyledTableCell colSpan={6} />\r\n            </StyledTableRow>\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n              colSpan={3}\r\n              count={actors.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: {\r\n                  'aria-label': 'rows per page',\r\n                },\r\n                native: true,\r\n              }}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n    <Box component=\"form\"\r\n      sx={{\r\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n      }}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n>\r\n    <div style={{'margineTop':'100px'}}>\r\n        <TextField\r\n          required\r\n          id=\"filled-required\"\r\n          label=\"Required\"\r\n          defaultValue=\"First name\"\r\n          variant='filled'\r\n        />\r\n        <TextField\r\n          required\r\n          id=\"filled-required\"\r\n          label=\"Required\"\r\n          defaultValue=\"Last name\"\r\n          variant=\"filled\"\r\n        />\r\n        <TextField\r\n          required\r\n          id=\"filled-required\"\r\n          label=\"Required\"\r\n          defaultValue=\"Image\"\r\n          variant=\"filled\"\r\n        />\r\n        </div>\r\n        <Button >Add</Button>\r\n    </Box>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}