{"ast":null,"code":"import { getToken, getUser } from './localStorage';\nimport { decode } from 'jsonwebtoken';\nexport const validToken = () => {\n  //return false\n  const token = getToken();\n  if (token === null) return false;\n  const exp = decode(token, {\n    complete: true\n  }).payload.exp;\n  return Date.now() < exp * 1000;\n};\nexport const userRole = () => {\n  const user = getUser();\n  if (user != null) return user.roles[0].name;\n  return '';\n};\nexport const getRandom = (arr, n) => {\n  let result = new Array(n),\n      len = arr.length,\n      taken = new Array(len);\n  if (n > len) return arr;\n\n  while (n--) {\n    const x = Math.floor(Math.random() * len);\n    result[n] = arr[x in taken ? taken[x] : x];\n    taken[x] = --len in taken ? taken[len] : len;\n  }\n\n  return result;\n};","map":{"version":3,"sources":["C:/Users/adnak/Downloads/NWT-projekat/fe-moviehub/src/utilities/common.js"],"names":["getToken","getUser","decode","validToken","token","exp","complete","payload","Date","now","userRole","user","roles","name","getRandom","arr","n","result","Array","len","length","taken","x","Math","floor","random"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,OAAnB,QAAkC,gBAAlC;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B;AACA,QAAMC,KAAK,GAAGJ,QAAQ,EAAtB;AACA,MAAII,KAAK,KAAK,IAAd,EAAoB,OAAO,KAAP;AACpB,QAAMC,GAAG,GAAGH,MAAM,CAACE,KAAD,EAAQ;AAAEE,IAAAA,QAAQ,EAAE;AAAZ,GAAR,CAAN,CAAkCC,OAAlC,CAA0CF,GAAtD;AACA,SAAOG,IAAI,CAACC,GAAL,KAAaJ,GAAG,GAAG,IAA1B;AACD,CANM;AAQP,OAAO,MAAMK,QAAQ,GAAG,MAAM;AAC7B,QAAMC,IAAI,GAAGV,OAAO,EAApB;AAEC,MAAIU,IAAI,IAAI,IAAZ,EAAkB,OAAOA,IAAI,CAACC,KAAL,CAAW,CAAX,EAAcC,IAArB;AAElB,SAAO,EAAP;AACD,CANM;AAQP,OAAO,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAMC,CAAN,KAAY;AACnC,MAAIC,MAAM,GAAG,IAAIC,KAAJ,CAAUF,CAAV,CAAb;AAAA,MACEG,GAAG,GAAGJ,GAAG,CAACK,MADZ;AAAA,MAEEC,KAAK,GAAG,IAAIH,KAAJ,CAAUC,GAAV,CAFV;AAGA,MAAIH,CAAC,GAAGG,GAAR,EAAa,OAAOJ,GAAP;;AACb,SAAOC,CAAC,EAAR,EAAY;AACV,UAAMM,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,GAA3B,CAAV;AACAF,IAAAA,MAAM,CAACD,CAAD,CAAN,GAAYD,GAAG,CAACO,CAAC,IAAID,KAAL,GAAaA,KAAK,CAACC,CAAD,CAAlB,GAAwBA,CAAzB,CAAf;AACAD,IAAAA,KAAK,CAACC,CAAD,CAAL,GAAW,EAAEH,GAAF,IAASE,KAAT,GAAiBA,KAAK,CAACF,GAAD,CAAtB,GAA8BA,GAAzC;AACD;;AACD,SAAOF,MAAP;AACD,CAXM","sourcesContent":["import { getToken, getUser } from './localStorage'\r\nimport { decode } from 'jsonwebtoken'\r\n\r\nexport const validToken = () => {\r\n  //return false\r\n  const token = getToken()\r\n  if (token === null) return false\r\n  const exp = decode(token, { complete: true }).payload.exp\r\n  return Date.now() < exp * 1000\r\n}\r\n\r\nexport const userRole = () => {\r\n const user = getUser()\r\n\r\n  if (user != null) return user.roles[0].name\r\n\r\n  return ''\r\n}\r\n\r\nexport const getRandom = (arr, n) => {\r\n  let result = new Array(n),\r\n    len = arr.length,\r\n    taken = new Array(len)\r\n  if (n > len) return arr\r\n  while (n--) {\r\n    const x = Math.floor(Math.random() * len)\r\n    result[n] = arr[x in taken ? taken[x] : x]\r\n    taken[x] = --len in taken ? taken[len] : len\r\n  }\r\n  return result\r\n}"]},"metadata":{},"sourceType":"module"}