{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adnak\\\\Downloads\\\\NWT-projekat\\\\fe-moviehub\\\\src\\\\Components\\\\SingleContent\\\\SingleContent.js\",\n    _s = $RefreshSig$();\n\nimport { Badge } from \"@material-ui/core\";\nimport { img_300, unavailable } from \"../../config/config\";\nimport \"./SingleContent.css\";\nimport ContentModal from \"../ContentModal/ContentModal\";\nimport { Button } from \"@material-ui/core\";\nimport { getUser } from \"../../utilities/localStorage\";\nimport { userRole } from \"../../utilities/common\";\nimport { useHistory } from \"react-router-dom\";\nimport { styled } from '@mui/material/styles';\nimport { orange } from '@mui/material/colors';\nimport { postToWatchlist } from \"../../Api/Watchlist/watchlist\";\nimport { message } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ColorButton = styled(Button)(({\n  theme\n}) => ({\n  color: theme.palette.getContrastText(orange[500]),\n  backgroundColor: orange[500],\n  '&:hover': {\n    backgroundColor: orange[800]\n  }\n}));\n\nconst SingleContent = ({\n  id,\n  poster,\n  title,\n  date,\n  media_type,\n  vote_average,\n  watchlistId\n}) => {\n  _s();\n\n  const user = getUser();\n  const role = userRole();\n  const history = useHistory();\n\n  function handleEdit(movieId) {\n    history.push({\n      pathname: '/watchlist',\n      search: '?id=' + movieId,\n      state: {\n        detail: movieId\n      }\n    });\n  }\n\n  async function handleAddToWatchlist(movieId) {\n    console.log(user);\n\n    try {\n      await postToWatchlist(watchlistId, movieId);\n      message.success('Successfully added to watchlist');\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media\",\n      children: [/*#__PURE__*/_jsxDEV(ContentModal, {\n        media_type: media_type,\n        id: id,\n        children: [/*#__PURE__*/_jsxDEV(Badge, {\n          badgeContent: vote_average,\n          color: vote_average > 6 ? \"primary\" : \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"poster\",\n          style: {\n            'width': '250px',\n            'height': '450px'\n          },\n          src: poster ? `${poster}` : unavailable //src={poster ? `${img_300}${poster}` : unavailable}\n          ,\n          alt: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"subTitle\",\n          children: [media_type === \"tv\" ? \"TV Series\" : \"Movie\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"subTitle\",\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), user && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"subTitle\",\n        children: [role === \"ROLE_ADMIN\" && /*#__PURE__*/_jsxDEV(ColorButton, {\n          variant: \"outlined\",\n          color: \"secondary\",\n          onClick: () => {\n            handleEdit(id);\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 34\n        }, this), role === \"ROLE_USER\" && /*#__PURE__*/_jsxDEV(ColorButton, {\n          onClick: () => {\n            handleAddToWatchlist(id);\n          },\n          children: \"Add to watchlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(SingleContent, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = SingleContent;\nexport default SingleContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleContent\");","map":{"version":3,"sources":["C:/Users/adnak/Downloads/NWT-projekat/fe-moviehub/src/Components/SingleContent/SingleContent.js"],"names":["Badge","img_300","unavailable","ContentModal","Button","getUser","userRole","useHistory","styled","orange","postToWatchlist","message","ColorButton","theme","color","palette","getContrastText","backgroundColor","SingleContent","id","poster","title","date","media_type","vote_average","watchlistId","user","role","history","handleEdit","movieId","push","pathname","search","state","detail","handleAddToWatchlist","console","log","success","error"],"mappings":"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","sourcesContent":["import { Badge } from \"@material-ui/core\";\r\nimport { img_300, unavailable } from \"../../config/config\";\r\nimport \"./SingleContent.css\";\r\nimport ContentModal from \"../ContentModal/ContentModal\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { getUser } from \"../../utilities/localStorage\";\r\nimport { userRole } from \"../../utilities/common\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { styled } from '@mui/material/styles';\r\nimport { orange } from '@mui/material/colors';\r\nimport { postToWatchlist } from \"../../Api/Watchlist/watchlist\";\r\nimport { message } from 'antd'\r\n\r\n\r\nconst ColorButton = styled(Button)(({ theme }) => ({\r\n  color: theme.palette.getContrastText(orange[500]),\r\n  backgroundColor: orange[500],\r\n  '&:hover': {\r\n    backgroundColor: orange[800]\r\n  },\r\n}));\r\n\r\n\r\nconst SingleContent = ({\r\n  id,\r\n  poster,\r\n  title,\r\n  date,\r\n  media_type,\r\n  vote_average,\r\n  watchlistId,\r\n}) => {\r\n  const user = getUser();\r\n  const role = userRole();\r\n  const history = useHistory()\r\n\r\n\r\n  function handleEdit(movieId) {\r\n   history.push({pathname:'/watchlist', search: '?id='+movieId,\r\n      state: { detail: movieId}})\r\n  }\r\n\r\n  async function handleAddToWatchlist(movieId){\r\n    console.log(user)\r\n    try{\r\n      await postToWatchlist(watchlistId, movieId)\r\n      message.success('Successfully added to watchlist')\r\n    } catch(error){\r\n      console.error(error)\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n    <div className='media'>\r\n      <ContentModal media_type={media_type} id={id}>\r\n<Badge\r\n        badgeContent={vote_average}\r\n        color={vote_average > 6 ? \"primary\" : \"secondary\"}\r\n      />\r\n      <img\r\n        className=\"poster\"\r\n        style={{'width':'250px', 'height':'450px'}}\r\n        src={poster ? `${poster}` : unavailable}\r\n        //src={poster ? `${img_300}${poster}` : unavailable}\r\n        alt={title}\r\n      />\r\n      <b className=\"title\">{title}</b>\r\n      <span className=\"subTitle\">\r\n        {media_type === \"tv\" ? \"TV Series\" : \"Movie\"}\r\n        <span className=\"subTitle\">{date}</span>\r\n      </span>\r\n      </ContentModal>\r\n      {(user && <span className=\"subTitle\">\r\n        {(role===\"ROLE_ADMIN\" && <ColorButton variant=\"outlined\" color=\"secondary\" onClick={() =>{handleEdit(id)}}>Edit</ColorButton>)}\r\n        {(role===\"ROLE_USER\" && <ColorButton onClick={() => {handleAddToWatchlist(id)}}>Add to watchlist</ColorButton>)}\r\n      </span>)}\r\n    </div>\r\n</>\r\n          \r\n      \r\n  );\r\n};\r\n\r\nexport default SingleContent;"]},"metadata":{},"sourceType":"module"}