{"ast":null,"code":"const sessionItem = 'moviehub-session';\nconst usernameItem = 'moviehub-login-username';\nconst passwordItem = 'moviehub-login-password'; // return token from local storage\n\nexport const getToken = () => {\n  const session = localStorage.getItem(sessionItem);\n  return session ? JSON.parse(session).jwt : null;\n}; // return user from local storage\n\nexport const getUser = () => {\n  const session = localStorage.getItem(sessionItem);\n\n  if (session) {\n    delete session.jwt;\n    return JSON.parse(session);\n  } else {\n    return null;\n  }\n}; // set user to local storage\n\nexport const setUser = user => {\n  const session = localStorage.getItem(sessionItem);\n  localStorage.setItem(sessionItem, JSON.stringify({ ...JSON.parse(session),\n    ...user\n  }));\n}; // set token and user to local storage\n\nexport const setSession = session => {\n  localStorage.setItem(sessionItem, JSON.stringify(session));\n}; // remove token and user from local storage\n\nexport const removeSession = () => {\n  localStorage.removeItem(sessionItem);\n  localStorage.removeRememberInfo();\n}; // remember email & password info with local storage\n\nexport const setRememberInfo = (username, password) => {\n  localStorage.setItem(usernameItem, username);\n  localStorage.setItem(passwordItem, password);\n}; // get email & password info from local storage\n\nexport const getRememberInfo = () => {\n  let username = localStorage.getItem(usernameItem);\n  let password = localStorage.getItem(passwordItem);\n\n  if (username && password) {\n    return {\n      username,\n      password\n    };\n  } else {\n    return null;\n  }\n}; // remove email & password info from local storage\n\nexport const removeRememberInfo = () => {\n  localStorage.removeItem(usernameItem);\n  localStorage.removeItem(passwordItem);\n};","map":{"version":3,"sources":["C:/Users/adnak/Downloads/NWT-projekat/fe-moviehub/src/utilities/localStorage.js"],"names":["sessionItem","usernameItem","passwordItem","getToken","session","localStorage","getItem","JSON","parse","jwt","getUser","setUser","user","setItem","stringify","setSession","removeSession","removeItem","removeRememberInfo","setRememberInfo","username","password","getRememberInfo"],"mappings":"AAAA,MAAMA,WAAW,GAAG,kBAApB;AACA,MAAMC,YAAY,GAAG,yBAArB;AACA,MAAMC,YAAY,GAAG,yBAArB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,QAAMC,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqBN,WAArB,CAAhB;AACA,SAAOI,OAAO,GAAGG,IAAI,CAACC,KAAL,CAAWJ,OAAX,EAAoBK,GAAvB,GAA6B,IAA3C;AACD,CAHM,C,CAKP;;AACA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC3B,QAAMN,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqBN,WAArB,CAAhB;;AACA,MAAII,OAAJ,EAAa;AACX,WAAOA,OAAO,CAACK,GAAf;AACA,WAAOF,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAAP;AACD,GAHD,MAGO;AACL,WAAO,IAAP;AACD;AACF,CARM,C,CAUP;;AACA,OAAO,MAAMO,OAAO,GAAIC,IAAD,IAAU;AAC/B,QAAMR,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqBN,WAArB,CAAhB;AACAK,EAAAA,YAAY,CAACQ,OAAb,CACEb,WADF,EAEEO,IAAI,CAACO,SAAL,CAAe,EACb,GAAGP,IAAI,CAACC,KAAL,CAAWJ,OAAX,CADU;AAEb,OAAGQ;AAFU,GAAf,CAFF;AAOD,CATM,C,CAWP;;AACA,OAAO,MAAMG,UAAU,GAAIX,OAAD,IAAa;AACrCC,EAAAA,YAAY,CAACQ,OAAb,CAAqBb,WAArB,EAAkCO,IAAI,CAACO,SAAL,CAAeV,OAAf,CAAlC;AACD,CAFM,C,CAIP;;AACA,OAAO,MAAMY,aAAa,GAAG,MAAM;AACjCX,EAAAA,YAAY,CAACY,UAAb,CAAwBjB,WAAxB;AACAK,EAAAA,YAAY,CAACa,kBAAb;AACD,CAHM,C,CAKP;;AACA,OAAO,MAAMC,eAAe,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACrDhB,EAAAA,YAAY,CAACQ,OAAb,CAAqBZ,YAArB,EAAmCmB,QAAnC;AACAf,EAAAA,YAAY,CAACQ,OAAb,CAAqBX,YAArB,EAAmCmB,QAAnC;AACD,CAHM,C,CAKP;;AACA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACnC,MAAIF,QAAQ,GAAGf,YAAY,CAACC,OAAb,CAAqBL,YAArB,CAAf;AACA,MAAIoB,QAAQ,GAAGhB,YAAY,CAACC,OAAb,CAAqBJ,YAArB,CAAf;;AACA,MAAIkB,QAAQ,IAAIC,QAAhB,EAA0B;AACxB,WAAO;AAAED,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAP;AACD;AACF,CARM,C,CAUP;;AACA,OAAO,MAAMH,kBAAkB,GAAG,MAAM;AACtCb,EAAAA,YAAY,CAACY,UAAb,CAAwBhB,YAAxB;AACAI,EAAAA,YAAY,CAACY,UAAb,CAAwBf,YAAxB;AACD,CAHM","sourcesContent":["const sessionItem = 'moviehub-session'\r\nconst usernameItem = 'moviehub-login-username'\r\nconst passwordItem = 'moviehub-login-password'\r\n\r\n// return token from local storage\r\nexport const getToken = () => {\r\n  const session = localStorage.getItem(sessionItem)\r\n  return session ? JSON.parse(session).jwt : null\r\n}\r\n\r\n// return user from local storage\r\nexport const getUser = () => {\r\n  const session = localStorage.getItem(sessionItem)\r\n  if (session) {\r\n    delete session.jwt\r\n    return JSON.parse(session)\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\n// set user to local storage\r\nexport const setUser = (user) => {\r\n  const session = localStorage.getItem(sessionItem)\r\n  localStorage.setItem(\r\n    sessionItem,\r\n    JSON.stringify({\r\n      ...JSON.parse(session),\r\n      ...user,\r\n    })\r\n  )\r\n}\r\n\r\n// set token and user to local storage\r\nexport const setSession = (session) => {\r\n  localStorage.setItem(sessionItem, JSON.stringify(session))\r\n}\r\n\r\n// remove token and user from local storage\r\nexport const removeSession = () => {\r\n  localStorage.removeItem(sessionItem)\r\n  localStorage.removeRememberInfo()\r\n}\r\n\r\n// remember email & password info with local storage\r\nexport const setRememberInfo = (username, password) => {\r\n  localStorage.setItem(usernameItem, username)\r\n  localStorage.setItem(passwordItem, password)\r\n}\r\n\r\n// get email & password info from local storage\r\nexport const getRememberInfo = () => {\r\n  let username = localStorage.getItem(usernameItem)\r\n  let password = localStorage.getItem(passwordItem)\r\n  if (username && password) {\r\n    return { username, password }\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\n// remove email & password info from local storage\r\nexport const removeRememberInfo = () => {\r\n  localStorage.removeItem(usernameItem)\r\n  localStorage.removeItem(passwordItem)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}