{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable @typescript-eslint/naming-convention */\n\nimport { unstable_createCssVarsProvider as createCssVarsProvider } from '@mui/system';\nimport experimental_extendTheme from './experimental_extendTheme';\nimport createTypography from './createTypography';\nconst defaultTheme = experimental_extendTheme();\nconst {\n  CssVarsProvider: Experimental_CssVarsProvider,\n  useColorScheme,\n  getInitColorSchemeScript\n} = createCssVarsProvider({\n  theme: defaultTheme,\n  attribute: 'data-mui-color-scheme',\n  modeStorageKey: 'mui-mode',\n  colorSchemeStorageKey: 'mui-color-scheme',\n  defaultColorScheme: {\n    light: 'light',\n    dark: 'dark'\n  },\n  prefix: 'md',\n  resolveTheme: theme => {\n    const newTheme = _extends({}, theme, {\n      typography: createTypography(theme.palette, theme.typography)\n    });\n\n    return newTheme;\n  },\n  shouldSkipGeneratingVar: keys => !!keys[0].match(/(typography|mixins|breakpoints|direction|transitions)/)\n});\nexport { useColorScheme, getInitColorSchemeScript, Experimental_CssVarsProvider };","map":{"version":3,"sources":["C:/Users/PC/Desktop/ETF/PNWT/NWT-projekat/fe-moviehub/node_modules/@mui/material/styles/CssVarsProvider.js"],"names":["_extends","unstable_createCssVarsProvider","createCssVarsProvider","experimental_extendTheme","createTypography","defaultTheme","CssVarsProvider","Experimental_CssVarsProvider","useColorScheme","getInitColorSchemeScript","theme","attribute","modeStorageKey","colorSchemeStorageKey","defaultColorScheme","light","dark","prefix","resolveTheme","newTheme","typography","palette","shouldSkipGeneratingVar","keys","match"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AAEA;;AACA,SAASC,8BAA8B,IAAIC,qBAA3C,QAAwE,aAAxE;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,MAAMC,YAAY,GAAGF,wBAAwB,EAA7C;AACA,MAAM;AACJG,EAAAA,eAAe,EAAEC,4BADb;AAEJC,EAAAA,cAFI;AAGJC,EAAAA;AAHI,IAIFP,qBAAqB,CAAC;AACxBQ,EAAAA,KAAK,EAAEL,YADiB;AAExBM,EAAAA,SAAS,EAAE,uBAFa;AAGxBC,EAAAA,cAAc,EAAE,UAHQ;AAIxBC,EAAAA,qBAAqB,EAAE,kBAJC;AAKxBC,EAAAA,kBAAkB,EAAE;AAClBC,IAAAA,KAAK,EAAE,OADW;AAElBC,IAAAA,IAAI,EAAE;AAFY,GALI;AASxBC,EAAAA,MAAM,EAAE,IATgB;AAUxBC,EAAAA,YAAY,EAAER,KAAK,IAAI;AACrB,UAAMS,QAAQ,GAAGnB,QAAQ,CAAC,EAAD,EAAKU,KAAL,EAAY;AACnCU,MAAAA,UAAU,EAAEhB,gBAAgB,CAACM,KAAK,CAACW,OAAP,EAAgBX,KAAK,CAACU,UAAtB;AADO,KAAZ,CAAzB;;AAIA,WAAOD,QAAP;AACD,GAhBuB;AAiBxBG,EAAAA,uBAAuB,EAAEC,IAAI,IAAI,CAAC,CAACA,IAAI,CAAC,CAAD,CAAJ,CAAQC,KAAR,CAAc,uDAAd;AAjBX,CAAD,CAJzB;AAuBA,SAAShB,cAAT,EAAyBC,wBAAzB,EAAmDF,4BAAnD","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\n\r\n/* eslint-disable @typescript-eslint/naming-convention */\r\nimport { unstable_createCssVarsProvider as createCssVarsProvider } from '@mui/system';\r\nimport experimental_extendTheme from './experimental_extendTheme';\r\nimport createTypography from './createTypography';\r\nconst defaultTheme = experimental_extendTheme();\r\nconst {\r\n  CssVarsProvider: Experimental_CssVarsProvider,\r\n  useColorScheme,\r\n  getInitColorSchemeScript\r\n} = createCssVarsProvider({\r\n  theme: defaultTheme,\r\n  attribute: 'data-mui-color-scheme',\r\n  modeStorageKey: 'mui-mode',\r\n  colorSchemeStorageKey: 'mui-color-scheme',\r\n  defaultColorScheme: {\r\n    light: 'light',\r\n    dark: 'dark'\r\n  },\r\n  prefix: 'md',\r\n  resolveTheme: theme => {\r\n    const newTheme = _extends({}, theme, {\r\n      typography: createTypography(theme.palette, theme.typography)\r\n    });\r\n\r\n    return newTheme;\r\n  },\r\n  shouldSkipGeneratingVar: keys => !!keys[0].match(/(typography|mixins|breakpoints|direction|transitions)/)\r\n});\r\nexport { useColorScheme, getInitColorSchemeScript, Experimental_CssVarsProvider };"]},"metadata":{},"sourceType":"module"}